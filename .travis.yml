language: cpp
dist: trusty
sudo: required
matrix:
  include:
  - os: linux
    compiler: clang
    before_install:
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake
    - g++ -v
    
  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-4.9
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-4.9, valgrind]
    before_install:
    - CXX=g++-4.9
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake

  - os: linux
    compiler: gcc
    env:
      - COMPILER=g++-5
    addons:
      apt:
        sources: ['ubuntu-toolchain-r-test']
        packages: [g++-5, valgrind]
    before_install:
    - CXX=g++-5
    - sudo add-apt-repository ppa:kubuntu-ppa/backports -y
    - sudo apt-get -qq update
    - sudo apt-get install -y libboost-system-dev libgtest-dev
    - sudo apt-get install --only-upgrade cmake
    
  - os: osx
    compiler: clang
    osx_image: xcode8
     - sudo port install boost
     - g++ -v
     - cmake -v
    
install:
 - cmake --version 
 - uname -a
 # GTest
 - wget -O gtest.tar.gz https://github.com/google/googletest/archive/release-1.7.0.tar.gz
 - tar xf gtest.tar.gz
 - cd googletest-release-1.7.0
 - cmake -DBUILD_SHARED_LIBS=ON .
 - make
 - ls -l
 - sudo cp -a include/gtest /usr/include
 - sudo cp -a libgtest_main.* libgtest.* /usr/lib/
 - cd ..
 ## Easylogging++
 - wget https://github.com/muflihun/easyloggingpp/archive/develop.zip
 - unzip develop.zip
 - cd easyloggingpp-develop
 - cmake .
 - make
 - sudo make install
# Crypto++ (We dont need this for residue, we need it for ripe)
 - wget https://raw.githubusercontent.com/muflihun/muflihun.github.io/master/downloads/cryptocpp.tar.gz
 - tar xf cryptocpp.tar.gz
 - cd cryptopp-CRYPTOPP_5_6_5
 - wget https://raw.githubusercontent.com/muflihun/muflihun.github.io/master/downloads/pem_pack.zip
 - unzip pem_pack.zip
 - cmake .
 - make
 - sudo make install
## Ripe
 - wget https://github.com/muflihun/ripe/archive/develop.zip
 - unzip develop.zip
 - cd ripe-develop
 - cmake .
 - make
 - ls -l
 - sudo make install

## Ripe Binaries
# - wget -O ripe-bin.tar.gz https://github.com/muflihun/ripe/releases/download/v3.3.0/ripe-3.3.0-x86_64-linux.tar.gz
# - tar xfz ripe-bin.tar.gz
# - cd ripe-3.3.0-x86_64-linux
# - ls -l
# - sudo cp lib* /usr/local/lib/
# - sudo cp ripe /usr/local/bin/
# - wget https://github.com/muflihun/ripe/releases/download/v3.3.0/Ripe.h
# - sudo cp Ripe.h /usr/include/

 ## Build
 - cd "${TRAVIS_BUILD_DIR}"
 - cd src
 - export RIPE="sudo ripe"
 - sudo cp /usr/local/lib/libripe* .
# - sudo cp /usr/local/lib/libstdc++.so.6.0.22 .
# - sudo ln -s libstdc++.so.6.0.22 libstdc++.so.6
 - $RIPE --version
 - sh decrypt-all.sh
 - cd ..
 - mkdir build
 - cd build
 - cmake -Dcompile-server=ON -Dtest=ON -Dtravis=ON ..

script: "sudo make VERBOSE=1 && ./residue-unit-tests"
branches:
  only:
    - master
    - develop
